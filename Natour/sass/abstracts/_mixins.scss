@mixin clearfix { //appends a pseudo element after the element which will then clear the floats
    &::after {
        content: "";
        display: table;
        clear: both;
    }
}

// centers an element, its parent needs to be relative, remember
@mixin centerAbsoluteXY {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

// MEDIA QUERY MANAGER
/*
0 - 600px:     Phone
601 - 900px:   Tablet Portrait
901 - 1200px:  Tablet Landscape

[1201 - 1800px: Desktops (Default Styles apply)]

> 1801px:      Big Desktops
*/

/*
$breakpoint argument choices:
- phone 
- tab-port  900px
- tab-land
- big-desktop

ORDER: Base + typography > general layout + grid > page layout > components

1em = 16px
*/
@mixin respond($breakpoint) {
    // 'rem' fails in media queries, so instead use 'em'
    @if $breakpoint == phone {
        // 600px
        @media only screen and (max-width: 37.5em) { @content }; // all "@content" passed where the mixin is used will be affect by this media query rule.
    }
    @if $breakpoint == tab-port {
        // 900px;
        @media only screen and (max-width: 56.25em) { @content }; // all "@content" passed where the mixin is used will be affect by this media query rule.
    }
    @if $breakpoint == tab-land {
        // 1200px;
        @media only screen and (max-width: 75em) { @content }; // all "@content" passed where the mixin is used will be affect by this media query rule.
    }
    @if $breakpoint == big-desktop {
        // min: from 1800 and beyond
        // 1800px;
        @media only screen and (min-width: 112.5em) { @content }; // all "@content" passed where the mixin is used will be affect by this media query rule.
    }
}









