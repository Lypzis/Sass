/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

$color-primary: #7ed56f;
$color-primary-light: #55c57a;
$color-primary-dark: #28b485;

/* GLOBAL CLEANER */
*,
*::after,
*::before {
    margin: 0;
    padding: 0;
    box-sizing: inherit; /* now everything inherits  the 'body' box-sizing */
}

/* The root for 'rem' to use... INHERITANCE!! \m/ */
html {
    /* the default font-size of the browser is 16px; */
    font-size: 62.5%; /* now it is 10px, and by being a percentage,
    it won't trouble the user if he wants to increase his font-size thus
    it is now easy to modify the size of everything else at once */
}

body {
    font-family: "Lato", sans-serif;
    font-weight: 400;
    /*font-size: 16px;*/
    line-height: 1.7;
    color: #777; /* all text will be of this color */
    padding: 3rem; /* 30px; gives a nice white margin around body of the web-page :D */
    box-sizing: border-box;
}

/*-------------- HEADER ---------------*/
.header {
    height: 95vh; /* viewport height */
    /* linear-gradient, starts with one color to the left and as it goes to the right changes the color */
    background-image: linear-gradient(to right bottom,rgba($color-primary, 0.801),
                    rgba($color-primary-dark, 0.801)),
                    url(../img/hero.jpg);
    background-size: cover;
    background-position: top;
    /* geometrical polygon, x and y are its corners in clockwise starting from top-left (0, 0) coordinate */ 
    /* can make any form, give enough coordinate dots */ 
    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%); 
    position: relative;
}

.header__logo-box {
    /* The absolute positioning here has the .header as its reference relative parent position */
    position: absolute;
    top: 4rem;
    left: 4rem;
}

.header__logo {
    height: 3.5rem;
}

.header__text-box {
    position: absolute; /* needs to be absolute in order to change top, left,... properties */
    top: 40%;
    left: 50%; /* the percentages are in relation to its parent element! So, 50% to the left of its placement of 0,0 coordinates... */
    transform: translate(-50%, -50%);
    text-align: center;
}

.heading-primary {
    color: #fff;
    text-transform: uppercase;

    /* hack to correct minor "shake" bug(?) in animations */
    backface-visibility: hidden;
    margin-bottom: 6rem;
}

.heading-primary--main {
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;

    /* placing our created animation */
    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out;

    /*
    animation-delay: 3s;
    animation-iteration-count: 3;
    */
}

.heading-primary--sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.75rem;

    /* shorter way */
    animation: moveInRight 1s ease-out;
}

/* Complex Animations */
@keyframes moveInLeft { /* a descriptive name */
    /* the element when the animation starts */
    0% {
        opacity: 0; /* invisible */
        transform: translateX(-10rem); /* a -100px(left) from its placed position */
    }

    80% {
        transform: translateX(1rem);
    }

    /* the element when the animation finishes */
    100% {
        opacity: 1;
        transform: translate(0); /* 0 means back to the its given position */
    }
}

@keyframes moveInRight { 
    0% {
        opacity: 0;
        transform: translateX(10rem); 
    }

    80% {
        transform: translateX(-1rem);
    }

    100% {
        opacity: 1;
        transform: translate(0);  
    }
}

@keyframes moveInBottom { 
    0% {
        opacity: 0;
        transform: translateY(3rem); 
    }

    100% {
        opacity: 1;
        transform: translate(0);  
    }
}

.btn {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    display: inline-block;  /* So the box model works as if is a block element and can receive padding, height..., */ 
                            /* and also is treated as a text in the text-box :D, by default it is 'inline' */
    &:link, &:visited {
        border-radius: 10rem;
        transition: all .2s; /* all properties will animate on 0.2s. */ 
        position: relative;
        font-size: 1.6rem;
    }

    &:hover {
        transform: translateY(-.3rem);
        box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2); /* nice shadow appears*/
    }

    &:active {
        transform: translateY(-.1rem);
        box-shadow: 0 .5rem 1rem rgba(0, 0, 0, 0.2); /* nice shadow is lowered to cause the impression of pressing */
    }

    /* treated as a child of the button */
    &::after { /* An element that looks exactly like what we have, but behind it */
        content: "";
        display: inline-block;
        height: 100%;
        width: 100%;
        border-radius: 10rem;
        position: absolute;
        top: 0;
        left: 0;
        z-index: -1; /* definetely behind the button now :D */
        transition: all .4s;
    }
}

.btn--white {
    background-color: #fff;
    color: #777;

    &::after {
        background-color: #fff;
    }

    &:hover::after { /* only appear 'after' on hover behind the button giving the impression that it is the button */
        transform: scaleX(1.4) scaleY(1.6);
        opacity: 0; /* will give waves effect, as it disappear */
    }
}

/* So, only the button with this class is animated */
.btn--animated {
    animation: moveInBottom .5s ease-out .75s;
    animation-fill-mode: backwards; /* applies starting animation properties before the animation starts */
}