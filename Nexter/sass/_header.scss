// minmax solves most of the @media size issues :D 
.header {
    background-color: $color-grey-dark-1;
    grid-column: full-start / col-end 6; // check '_base.scss' in case of doubt
    background-image: linear-gradient(rgba($color-secondary, .93), rgba($color-secondary, .93)), url(../img/hero.jpeg);
    background-size: cover;
    background-position: center;
    padding: 8rem;
    padding-top: 4rem;

    display: grid;
    grid-template-rows: 1fr min-content minmax(min-content, 6rem) 1fr; // one '1fr' push every other row affar, because it fills the available space, remember
                                             // the row with '6rem' creates more space below which is an ideal "margin" without adding margin :D, otherwise fits its min-content which is ideally responsive    
    grid-template-columns: minmax(min-content, max-content); // a column with the max available space required to fit the content, but never smaller
    row-gap: 1.5rem;
    justify-content: center;

    @media only screen and (max-width: $bp-medium) {
        grid-column: full-start / full-end; // or 1 / -1
    }

    @media only screen and (max-width: $bp-small) {
        padding: 5rem;
    }

    &__logo {
        height: 3rem;
        justify-self: center;
    }

    &__btn {
        align-self: flex-start; // makes button look normal, TRY removing 'justify' and 'align' and See what happens!
        justify-self: flex-start;
    }

    &__seenon-text {
        display: grid;
        grid-template-columns: 1fr max-content 1fr;
        column-gap: 1.5rem;
        align-items: center;

        font-size: 1.6rem;
        color: $color-grey-light-2;

        &::before,
        &::after {
            content: "";
            height: 1px;
            display: block;
            background-color: currentColor; // the color from the parent, remember? :D
        }
    }

    &__seenon-logos {
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        column-gap: 3rem;
        justify-items: center;
        align-items: center;

        img {
            max-height: 2.5rem; // the 'max-height' can be '2.5rem', but it can be less
            max-width: 100%;
            filter: brightness(.7);
        }
    }
}